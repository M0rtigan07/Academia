// <auto-generated />
using System;
using CursoMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CursoMVC.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210822131424_inicio")]
    partial class inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CursoMVC.Models.Alumno", b =>
                {
                    b.Property<int>("AlumnoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlumnoApellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlumnoDNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlumnoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlumnoID");

                    b.ToTable("Alumno");
                });

            modelBuilder.Entity("CursoMVC.Models.Curso", b =>
                {
                    b.Property<int>("CursoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CursoID");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("CursoMVC.Models.Docente", b =>
                {
                    b.Property<int>("DocenteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CursoID")
                        .HasColumnType("int");

                    b.Property<string>("DocenteDNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocenteID");

                    b.HasIndex("CursoID");

                    b.ToTable("Docente");
                });

            modelBuilder.Entity("CursoMVC.Models.Inscripcion", b =>
                {
                    b.Property<int>("InscripcionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlumnoApellidos")
                        .HasColumnType("int");

                    b.Property<int>("AlumnoID")
                        .HasColumnType("int");

                    b.Property<string>("AlumnoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CursoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeInscripcion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotaID")
                        .HasColumnType("int");

                    b.Property<string>("calificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InscripcionID");

                    b.HasIndex("AlumnoID");

                    b.HasIndex("CursoID");

                    b.HasIndex("NotaID");

                    b.ToTable("Inscripcion");
                });

            modelBuilder.Entity("CursoMVC.Models.Nota", b =>
                {
                    b.Property<int>("NotaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("calificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotaID");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("CursoMVC.Models.Docente", b =>
                {
                    b.HasOne("CursoMVC.Models.Curso", "Curso")
                        .WithMany("Docente")
                        .HasForeignKey("CursoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("CursoMVC.Models.Inscripcion", b =>
                {
                    b.HasOne("CursoMVC.Models.Alumno", "Alumno")
                        .WithMany("Inscripcion")
                        .HasForeignKey("AlumnoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoMVC.Models.Curso", "Curso")
                        .WithMany("Inscripcion")
                        .HasForeignKey("CursoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoMVC.Models.Nota", "Nota")
                        .WithMany("Inscripcion")
                        .HasForeignKey("NotaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Curso");

                    b.Navigation("Nota");
                });

            modelBuilder.Entity("CursoMVC.Models.Alumno", b =>
                {
                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("CursoMVC.Models.Curso", b =>
                {
                    b.Navigation("Docente");

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("CursoMVC.Models.Nota", b =>
                {
                    b.Navigation("Inscripcion");
                });
#pragma warning restore 612, 618
        }
    }
}
